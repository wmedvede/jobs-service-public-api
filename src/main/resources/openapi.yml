---
openapi: 3.0.3
info:
  title: jobs-service-public-api API
  version: 1.0.0-SNAPSHOT
paths:
  /jobs:
    post:
      tags:
        - Job Service Resource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
  /jobs/find:
    get:
      tags:
        - Job Service Resource
      parameters:
        - name: businessKey
          in: query
          schema:
            default: ""
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
  /jobs/{id}:
    get:
      tags:
        - Job Service Resource
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
components:
  schemas:
    Recipient:
      title: Recipient title created by API!
      description: Recipient description created by API!
      required:
        - type
      type: object
      properties:
        type:
          type: string
        payload:
          type: object
      discriminator:
        propertyName: type
        mapping:
          kafka: '#/components/schemas/KafkaRecipient'
          http: '#/components/schemas/HttpRecipient'
          sink: '#/components/schemas/SinkRecipient'
    Schedule:
      title: Schedule title created by API!
      description: Schedule description created by API!
      required:
        - type
      type: object
      properties:
        type:
          type: string
      discriminator:
        propertyName: type
        mapping:
          cron: '#/components/schemas/CronSchedule'
          timer: '#/components/schemas/TimerSchedule'
    CronSchedule:
      description: Schedule definition to execute a job on a cron based configuration
      type: object
      allOf:
        - $ref: '#/components/schemas/Schedule'
      properties:
        expression:
          type: string
        timeZone:
          type: string
    HttpRecipient:
      description: Recipient definition to execute a job with a http request
      type: object
      allOf:
        - $ref: '#/components/schemas/Recipient'
      properties:
        url:
          type: string
        method:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
        queryParams:
          type: object
          additionalProperties:
            type: string
    Job:
      description: Defines a job that can be managed by the Jobs Service
      type: object
      properties:
        id:
          type: string
        businessKey:
          type: string
        state:
          $ref: '#/components/schemas/State'
        schedule:
          $ref: '#/components/schemas/Schedule'
        retry:
          $ref: '#/components/schemas/Retry'
        recipient:
          $ref: '#/components/schemas/Recipient'
    KafkaRecipient:
      description: Recipient definition to execute a job with a kafka message
      type: object
      allOf:
        - $ref: '#/components/schemas/Recipient'
      properties:
        bootstrapServers:
          type: string
        topicName:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
    Retry:
      description: The retry configuration establishes the number of times a failing
        Job execution must be retried before itâ€™s considered as FAILED
      type: object
      properties:
        maxRetries:
          format: int32
          type: integer
        delay:
          format: int64
          type: integer
        delayUnit:
          $ref: '#/components/schemas/TemporalUnit'
        maxDuration:
          format: int64
          type: integer
        durationUnit:
          $ref: '#/components/schemas/TemporalUnit'
    SinkRecipient:
      description: Recipient definition to execute a job with a cloud event on a knative
        sink
      type: object
      allOf:
        - $ref: '#/components/schemas/Recipient'
      properties:
        sinkUrl:
          type: string
        contentMode:
          type: string
    State:
      description: Available states for a Job
      enum:
        - TBD1
        - TBD2
        - TBD3
      type: string
    TemporalUnit:
      enum:
        - MILLIS
        - SECONDS
        - MINUTES
        - HOURS
        - DAYS
      type: string
    TimerSchedule:
      description: Schedule definition to execute a job on a timer based configuration
      type: object
      allOf:
        - $ref: '#/components/schemas/Schedule'
      properties:
        startTime:
          type: string
        repeatCount:
          format: int32
          type: integer
        delay:
          format: int64
          type: integer
        delayUnit:
          $ref: '#/components/schemas/TemporalUnit'